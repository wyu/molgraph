Remove all nodes and edges

MATCH (n) OPTIONAL MATCH (n)-[r]-() DELETE n,r
MATCH ()-[r]-() DELETE r

# load the nodes by their 'labels'
LOAD CSV WITH HEADERS FROM 'file:///usr/local/neo4j/current/import/GWAS_nodes.GENE' AS line FIELDTERMINATOR '\t'
CREATE (:GENE { id: toInt(line.id), uid: line.label})

LOAD CSV WITH HEADERS FROM 'file:///usr/local/neo4j/current/import/GWAS_nodes.STUDY' AS line FIELDTERMINATOR '\t'
CREATE (:STUDY { id:toInt(line.id), uid:line.label, title:line.STUDY, journal:line.Journal, author:line.Author, sample:line.Sample})

LOAD CSV WITH HEADERS FROM 'file:///usr/local/neo4j/current/import/GWAS_nodes.SNP' AS line FIELDTERMINATOR '\t'
CREATE (:SNP { id:toInt(line.id), uid:line.label, context:line.Context, chr:line.Chr, position:toInt(line.ChrPos)})

LOAD CSV WITH HEADERS FROM 'file:///usr/local/neo4j/current/import/GWAS_nodes.TRAIT' AS line FIELDTERMINATOR '\t'
CREATE (:TRAIT { id:toInt(line.id), uid:line.label, title:line.Trait })

# loading the edges with additional properties by their 'types'
LOAD CSV WITH HEADERS FROM "file:///usr/local/neo4j/current/import/GWAS_edges.SNP-GENE" AS line FIELDTERMINATOR '\t'
match (a:SNP), (b:GENE) where a.id=toInt(line.start) AND b.id=toInt(line.end)
create (a)-[r:SNP_GENE  { context:line.Context, disease:line.DISEASE}]->(b) return r;

LOAD CSV WITH HEADERS FROM "file:///usr/local/neo4j/current/import/GWAS_edges.SNP-STUDY" AS line FIELDTERMINATOR '\t'
match (a:SNP), (b:STUDY) where a.id=toInt(line.start) AND b.id=toInt(line.end)
create (b)-[r:SNP_STUDY]->(a) return r;

LOAD CSV WITH HEADERS FROM "file:///usr/local/neo4j/current/import/GWAS_edges.SNP-TRAIT" AS line FIELDTERMINATOR '\t'
match (a:SNP), (b:TRAIT) where a.id=toInt(line.start) AND b.id=toInt(line.end)
create (b)-[r:SNP_TRAIT]->(a) return r;

# load the edges in one swoop
LOAD CSV WITH HEADERS FROM "file:///usr/local/neo4j/current/import/GWAS.edges" AS line FIELDTERMINATOR '\t'
WITH line.type as t, toInt(line.start) as s, toInt(line.end) as e, line.DISEASE as d, line.Context as c, toFloat(line.weight) as w
match (a:SNP), (b:GENE) where a.id=s AND b.id=e
create (a)-[r:t { context:c, disease:c, weight:w}]->(b) return r;


-rw-r--r-- 1 wyu wyu 234M Apr 26 19:51 Combined.edges
-rw-r--r-- 1 wyu wyu 718K Apr 26 19:51 Combined_nodes.DISEASE
-rw-r--r-- 1 wyu wyu 1.2M Apr 26 19:51 Combined_nodes.DRUG
-rw-r--r-- 1 wyu wyu 2.1M Apr 26 19:51 Combined_nodes.GENE
-rw-r--r-- 1 wyu wyu  16M Apr 26 19:51 Combined_nodes.SNP
-rw-r--r-- 1 wyu wyu 544K Apr 26 19:51 Combined_nodes.STUDY
-rw-r--r-- 1 wyu wyu 1008 Apr 26 19:51 Combined_nodes.TISSUE
-rw-r--r-- 1 wyu wyu  61K Apr 26 19:51 Combined_nodes.TRAIT


# load the nodes by their 'labels'
LOAD CSV WITH HEADERS FROM 'file:///usr/local/neo4j/current/import/Combined_nodes.GENE' AS line FIELDTERMINATOR '\t'
CREATE (:GENE { id: toInt(line.id), uid: line.uid, name: line.name})

LOAD CSV WITH HEADERS FROM 'file:///usr/local/neo4j/current/import/Combined_nodes.SNP' AS line FIELDTERMINATOR '\t'
CREATE (:SNP { id:toInt(line.id), uid:line.uid, context:line.Context, chr:line.Chr, position:toInt(line.ChrPos)})

LOAD CSV WITH HEADERS FROM 'file:///usr/local/neo4j/current/import/Combined_nodes.STUDY' AS line FIELDTERMINATOR '\t'
CREATE (:STUDY { id:toInt(line.id), uid:line.uid, title:line.Study, journal:line.Journal, author:line.Author, sample:line.Sample})

LOAD CSV WITH HEADERS FROM 'file:///usr/local/neo4j/current/import/Combined_nodes.TRAIT' AS line FIELDTERMINATOR '\t'
CREATE (:TRAIT { id:toInt(line.id), uid:line.uid, title:line.Trait })

LOAD CSV WITH HEADERS FROM 'file:///usr/local/neo4j/current/import/Combined_nodes.DISEASE' AS line FIELDTERMINATOR '\t'
CREATE (:DISEASE { id:toInt(line.id), uid:line.uid, title:line.name })

LOAD CSV WITH HEADERS FROM 'file:///usr/local/neo4j/current/import/Combined_nodes.TISSUE' AS line FIELDTERMINATOR '\t'
CREATE (:TISSUE { id:toInt(line.id), uid:line.uid, title:line.title })

LOAD CSV WITH HEADERS FROM 'file:///usr/local/neo4j/current/import/Combined_nodes.DRUG' AS line FIELDTERMINATOR '\t'
CREATE (:DRUG { id:toInt(line.id), uid:line.uid, title:line.title, name:line.name, type:line.type })

LOAD CSV WITH HEADERS FROM 'file:///usr/local/neo4j/current/import/Combined_nodes.SM' AS line FIELDTERMINATOR '\t'
CREATE (:SM { id:toInt(line.id), uid:line.uid })

# load the edges
LOAD CSV WITH HEADERS FROM "file:///usr/local/neo4j/current/import/Combined_edges.Biomarker" AS line FIELDTERMINATOR '\t'
match (a:GENE), (b:DISEASE) where a.id=toInt(line.start) AND b.id=toInt(line.end)
create (a)-[r:is_biomarker_for  { weight:toFloat(line.weight), source:line.Source, pubmed:toInt(line.nPubMed)}]->(b) return r;

USING PERIODIC COMMIT 5000
LOAD CSV WITH HEADERS FROM "file:///usr/local/neo4j/current/import/Combined_edges.association" AS line FIELDTERMINATOR '\t'
match (a:GENE), (b:GENE) where a.id=toInt(line.start) AND b.id=toInt(line.end)
create (a)-[r:associate_with  { weight:toFloat(line.weight), uid:line.uid, assay:line.ASSAY, tissue:line.TISSUE, dataset:line.dataset, name:line.name, organism:line.organism}]->(b) return r;

LOAD CSV WITH HEADERS FROM "file:///usr/local/neo4j/current/import/Combined_edges.is_target_of" AS line FIELDTERMINATOR '\t'
match (a:DRUG), (b:GENE) where a.id=toInt(line.start) AND b.id=toInt(line.end)
create (a)-[r:is_target_of  { weight:toFloat(line.weight) }]->(b) return r;

LOAD CSV WITH HEADERS FROM "file:///usr/local/neo4j/current/import/Combined_edges.association" AS line FIELDTERMINATOR '\t'
match (a:DRUG), (b:GENE) where a.id=toInt(line.start) AND b.id=toInt(line.end)
create (a)-[r:is_target_of  { weight:toFloat(line.weight), uid:line.uid, dataset:line.dataset, tissue:line.TISSUE }]->(b) return r;


# load the edges in one swoop
USING PERIODIC COMMIT 5000
LOAD CSV WITH HEADERS FROM "file:///usr/local/neo4j/current/import/Combined.edges" AS line FIELDTERMINATOR '\t'
WITH line.type as t, toInt(line.start) as s, toInt(line.end) as e, line.DISEASE as d, line.Context as c, toFloat(line.weight) as w, line.title as l, line.uid as u
match (a), (b) where a.id=s AND b.id=e
create (a)-[r:t { context:c, disease:c, weight:w, title:l, uid:u}]->(b) return r;

USING PERIODIC COMMIT 5000
LOAD CSV WITH HEADERS FROM "file:///usr/local/neo4j/current/import/Combined_edges.Biomarker" AS line FIELDTERMINATOR '\t'
WITH line.type as t, toInt(line.start) as s, toInt(line.end) as e, line.DISEASE as d, line.Context as c, toFloat(line.weight) as w, line.title as l, line.uid as u
match (a), (b) where a.id=s AND b.id=e
create (a)-[r:t { context:c, disease:c, weight:w, title:l, uid:u}]->(b) return r;





start	end	type	weight	Context	DISEASE	title	uid	file	Source	nPubMed